
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      MainApp
 *  Source:     D:\Project\formal\test\flex_src\MainApp.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.11.04 14:47:50 CST
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.controls.PopUpButton;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.filters.*;
import mx.rpc.remoting.mxml.RemoteObject;
import mx.styles.*;
import spark.components.Application;
import spark.components.Button;
import spark.components.Label;


[Frame(extraClass="_MainApp_FlexInit")]

[Frame(factoryClass="_MainApp_mx_managers_SystemManager")]


//  begin class def
public class MainApp
    extends spark.components.Application
    implements mx.binding.IBindingClient
{

    //  instance variables
/**
 * @private
 **/
    public var _MainApp_Label1 : spark.components.Label;

    [Bindable]
	/**
 * @private
 **/
    public var ro : mx.rpc.remoting.mxml.RemoteObject;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function MainApp()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _MainApp_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_MainAppWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return MainApp[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.minWidth = 955;
        this.minHeight = 600;
        this.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_MainApp_Array1_c);
        _MainApp_RemoteObject1_i();


        // events










        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings


        // ambient styles
        mx_internal::_MainApp_StylesInit();

                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 11 - 17

			import mx.controls.Alert;
			import mx.messaging.channels.AMFChannel;
			import mx.messaging.ChannelSet;
			import mx.rpc.events.ResultEvent;
	
		

    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _MainApp_RemoteObject1_i() : mx.rpc.remoting.mxml.RemoteObject
{
	var temp : mx.rpc.remoting.mxml.RemoteObject = new mx.rpc.remoting.mxml.RemoteObject();
	temp.destination = "TestFacade";
	temp.operations = {};
	temp.initialized(this, "ro")
	ro = temp;
	mx.binding.BindingManager.executeBindings(this, "ro", ro);
	return temp;
}

private function _MainApp_Array1_c() : Array
{
	var temp : Array = [_MainApp_Label1_i(), _MainApp_Button1_c(), _MainApp_PopUpButton1_c()];
	return temp;
}

private function _MainApp_Label1_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.x = 228;
	temp.y = 61;
	temp.width = 245;
	temp.height = 38;
	temp.setStyle("fontSize", 29);
	temp.id = "_MainApp_Label1";
	if (!temp.document) temp.document = this;
	_MainApp_Label1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_MainApp_Label1", _MainApp_Label1);
	return temp;
}

private function _MainApp_Button1_c() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.x = 64;
	temp.y = 97;
	temp.width = 104;
	temp.height = 32;
	temp.label = "Button";
	temp.addEventListener("click", ___MainApp_Button1_click);
	if (!temp.document) temp.document = this;
	return temp;
}

/**
 * @private
 **/
public function ___MainApp_Button1_click(event:flash.events.MouseEvent):void
{
	ro.hello();
}

private function _MainApp_PopUpButton1_c() : mx.controls.PopUpButton
{
	var temp : mx.controls.PopUpButton = new mx.controls.PopUpButton();
	temp.x = 205;
	temp.y = 107;
	temp.label = "PopUpButton";
	if (!temp.document) temp.document = this;
	return temp;
}


    //  binding mgmt
    private function _MainApp_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (ro.hello.lastResult);
                return (result == undefined ? null : String(result));
            },
            null,
            "_MainApp_Label1.text"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (MainApp)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;

    //  initialize style defs for MainApp

    mx_internal var _MainApp_StylesInit_done:Boolean = false;

    mx_internal function _MainApp_StylesInit():void
    {
        //  only add our style defs to the style manager once
        if (mx_internal::_MainApp_StylesInit_done)
            return;
        else
            mx_internal::_MainApp_StylesInit_done = true;
            
        var style:CSSStyleDeclaration;
        var effects:Array;
                    

        var conditions:Array;
        var condition:CSSCondition;
        var selector:CSSSelector;

        styleManager.initProtoChainRoots();
    }


    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
